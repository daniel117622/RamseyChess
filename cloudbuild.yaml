steps:
  # Pull MongoDB Image (version 5.0) from Docker Hub
  - name: 'gcr.io/cloud-builders/docker'
    args: ['pull', 'mongo:5.0']

  # Deploy MongoDB Container
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'compute', 'instances', 'create-with-container', 'mongodb-instance',
      '--zone', 'us-central1-a',
      '--container-image', 'mongo:5.0',
      '--container-restart-policy', 'always',
      '--container-arg=--bind_ip', '0.0.0.0',
      '--container-arg=--port', '27017',
      '--tags=mongodb',
      '--network-tier=STANDARD'
    ]

  # Pull and Deploy Ramsey API
  - name: 'gcr.io/cloud-builders/docker'
    args: ['pull', 'daniel117622/chess_bots-ramsey-api:latest']
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'compute', 'instances', 'create-with-container', 'ramsey-api-instance',
      '--zone', 'us-central1-a',
      '--container-image', 'daniel117622/chess_bots-ramsey-api:latest',
      '--container-restart-policy', 'always',
      '--container-env', 'FLASK_APP=server.py,FLASK_RUN_HOST=0.0.0.0,PYTHONPATH=/app'
    ]

  # Pull and Deploy Frontend
  - name: 'gcr.io/cloud-builders/docker'
    args: ['pull', 'daniel117622/chess_bots-frontend:latest']
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'compute', 'instances', 'create-with-container', 'frontend-instance',
      '--zone', 'us-central1-a',
      '--container-image', 'daniel117622/chess_bots-frontend:latest',
      '--container-restart-policy', 'always'
    ]

# Set required variables
options:
  env:
    - 'CLOUDSDK_COMPUTE_REGION=us-central1'
    - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
