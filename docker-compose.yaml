version: '3.8'

services:
  mongodb:
    image: mongo:5.0
    container_name: mongodb
    ports:
      - "27018:27017"
    volumes:
      - ./mongodb_volume:/data/db
    restart: always
    command: ["--bind_ip", "0.0.0.0", "--port", "27017", "--auth"]  # Enable authentication
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - mynetwork
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123

  ramsey-api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: ramsey-api
    ports:
      - "3001:5000"
#    depends_on:
#      mongodb:
#        condition: service_healthy
    restart: always
    environment:
      - FLASK_APP=server.py
      - FLASK_RUN_HOST=0.0.0.0
      - PYTHONPATH=/app
      - MONGO_URI=${MONGO_URI}  # Reference MONGO_URI from environment variable
    networks:
      - mynetwork

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "80:80"  # Make sure port 80 is exposed for Nginx
    restart: always
    networks:
      - mynetwork

  elo-rankings:
    build:
      context: ./elo-rankings
      dockerfile: DOCKERFILE
    container_name: elo-rankings
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
    restart: always
    environment:
      - MONGO_URI=${MONGO_URI}  
    networks:
      - mynetwork

volumes:
  traefik-certificates:

networks:
  mynetwork:
    driver: bridge
